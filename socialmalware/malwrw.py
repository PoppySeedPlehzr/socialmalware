import argparse
import urllib3
import json
import os
from config import *



"""
    Function to submit a given file name to malwr.com
"""

def submit(fname="", dbg=True):
    if os.path.exists(fname):
        ADD_ANALYSIS_URL = "https://malwr.com/api/analysis/add/"
        REPORT_BASE_URL = ""
        STATUS_URL = "https://malwr.com/api/analysis/status/"
        FNAME_FULL_DIR = os.path.join(os.getcwd(), fname)

        pool = urllib3.PoolManager(10)
        fields={"api_key":MALWRKEY, "shared":"yes", "file":FNAME_FULL_DIR}
        resp = pool.request("POST", ADD_ANALYSIS_URL, fields=fields)

        if dbg:
            if resp.status == 200:
                print "[+] File successfully submitted to malwr!"
        print json.dumps(resp.data)

    else:
        print "[-] Sample was not found on disk. Check the filename."


__author__ = 'Muffins'
if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="A wrapper for the Malwr API. This script will submit samples to \
                                                 malwr for analysis")
    parser.add_argument("file", default="", help="Sample to submit to malwr.com - THESE SUBMISSIONS ARE\
            PUBLIC!")
    parser.add_argument("--debug", "-d", default=True, type=bool, help="Turn on debugging verbosity")
    args = parser.parse_args()
    submit(args.file, args.debug)







""" API Documentation

    POST /api/analysis/add/

    Submit a file for analysis. All the files submitted through this API function will be queued with a medium priority. API submissions can NOT be private. Duplicates (samples already in Malwr) are not allowed.

    Parameters:

    api_key: your private API key.
    shared (optional): enable to share the binary file with the community. By default it is enabled. Available options: yes or no.
    force (optional): force processing even if sample is already analyzed.
    Example:

    curl -F api_key=<key> -F shared=yes -F file=@/path/to/binary https://malwr.com/api/analysis/add/
    Response (JSON):

    { "status" : "added", "sha256" : <sha256>, "uuid" : <uuid> }
    POST /api/analysis/status/

    Check the status of an analysis task.

    Parameters:

    api_key: your private API key.
    uuid: ID of the analysis task.
    Example:

    curl -F api_key=<key> -F uuid=<uuid> https://malwr.com/api/analysis/status/
    Response (JSON):

    { "status" : (pending/processing/completed) }


"""